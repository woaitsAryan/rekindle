networks:
  api-network:
    driver: bridge

services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: backend.Dockerfile
    restart: always
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    # depends_on:
      # postgres:
      #   condition: service_healthy
    env_file:
      - .env
      - apps/backend/.env
    networks:
      - api-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://127.0.0.1:${BACKEND_PORT}/ping"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  # postgres:
  #   image: postgres:16
  #   container_name: postgres-db
  #   restart: always
  #   ports:
  #     - ${DB_PORT}:${DB_PORT}
  #   env_file:
  #     - .env
  #   environment:
  #     - POSTGRES_DB=${DB_NAME}
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #     - POSTGRES_USER=${DB_USER}
  #     - PGPASSWORD=${DB_PASSWORD}
  #     - PGPORT=${DB_PORT}
  #   volumes:
  #     - postgres:/var/lib/postgresql/data
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  #   networks:
  #     - api-network
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 20s
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "200k"
  #       max-file: "10"

volumes:
  postgres:
    name: postgres-data
    driver: local